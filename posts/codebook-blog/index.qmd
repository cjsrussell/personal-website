---
title: "Creating a Data Codebook in Quarto"
author: "Connair Russell"
description: "A step by step guide on how to create a codebook for your dataset"
image: image.jpg
categories: [Tutorial, Quarto, Code, Open Science]
---

## What is a codebook and why do i need one?

Codebooks (or data dictionaries) are the documentation for your data. At the very minimum they contain the definitions of your variables, and at best they include additional information such as question text, response scales, and variable coding schemes.

In this brief guide I will go through how and why you might want to create a codebook, hopefully showing how simple it is. We will do this using Quarto in RStudio, allowing us to have both offline (PDF) and online versions of the same document. All of this can be done in VS Code or other platforms and the Quarto documentation has you covered there (see links below).

For simple datasets a single page document might be fine, but for more complex datasets with nontrivial coding schemes more clear documentation is helpful.

#### For you

It's very easy to wax lyrical about the importance of open data and its key role in improving psychological and other sciences hit by recent crises, and i'll do that in the next section, but perhaps the biggest beneficiary of good documentation will be you!

When we're working on projects we are often so deep into what we're doing that forgetting some important information is inconceivable, but in a few years you want to be able to understand your work just as well. Keeping clear documentation of exactly what you did to end up with the datafile you have allows you to jump right back in without the befuddlement of trying to interpret the variable names created by your former self.

Another great benefit is that it can help with consistency across datasets and projects. If you have a specific variable scheme for a measure you use frequently, keeping a codebook can help you stay consistent.

#### For Science!

Open science is better science, well at the very least it is not worse science. Whether someone will ever actually look at your data is an open question *but if they do* you want them to be able to interpret what is going on. You never know, they might find something really cool. This is not a blog on open science or the benefits of data sharing, they have been written a million times by folks more knowledgable than me, but here are two of the key reasons, in my opinion, that having open data (and a codebook!) are good for science.

It's <b>[***transparent***]{.underline}</b>. If we are sharing some or other conclusion based on data it is only fair that people are able to scrutinise that conclusion. Without the ability to actually look at the data we are taking authors' conclusions on faith, which given recent scandals in the sciences, is not as easy as it once was. It's less about policing, and more about being able to stand up and say "hey, don't take my word for it, here is the data".

Having your data available makes it <b>[***accessible***]{.underline}</b> to other scholars and members of the public who may want to build upon it. We all have our own worldviews, interests and skills and someone might have a take on your work you had never even considered. This can lead to <b>[***innovation***]{.underline}</b> and possible <b>[***collaboration***]{.underline}</b>. It also allows folks who may not have the luxury of funding systems that allow the collection of large and high quality data sets, yet again possibly fostering innovation and collaboration.

Science is a collective effort, and open, interpretable data fosters this.

## Making a codebook in Quarto

### What is Quarto?

Quarto is great. It was made by the folks over at Posit (who make RStudio) and provides a singe ecosystem for your coding notebooks, websites, presentations, along with books and other documents.

Installing it is super easy and an installation guide can be found [here](https://quarto.org/docs/get-started/). I'll be using RStudio for this example but all of this can also be done using other tools (i made my codebook for my current project in VS Code) and these are also covered in the above link.

### Setting up a Quarto book

To get started we will need to create a blank book project. If you have not used projects before they are a nice tidy way to keep related files collected together in their own directory.

We will use the Quarto Book format and to create one you go to:

File -\> New Project... -\> New Diectory -\> Quarto Book

You can then choose the folder name for your directory, and where you want it to be stored. If you use renv and/or git you can tick those options, but they're not needed to make it work.

![](project.gif)

This will create your project and generate some files for you:

<b>***\_quarto.yml***</b> - this is the main settings and contents page for your codebook.

<b>***index.qmd***</b> - this and the other .qmd files are the different pages of your codebook

<b>***references.bib***</b> is the bibliography file for any references you might want to include.

We already have everything we need to to make our book! We will make one quick change here and then you can now see what this looks like without any further input.

in <b>***\_quarto.yml***</b> we will update the format section to include word document, so it should look like this (without my comments):

```{r, eval=FALSE}
format:
  html:
    theme: cosmo
  pdf:
    documentclass: scrreprt
  docx:                          # this adds .docx output format
   toc: true                     # this enables table of contents
   number-sections: true         # this enables section numbering
```

We can now see what this Word document and a PDF would look like! You can do this by clicking the dropdown in RStudio:

![](render.jpg)

or by running the following in the terminal (not the R console, the other tab!). This will create a \_book folder in your directory in which you can see PDF and a .docx file of your book:

```{r, eval=FALSE}
quarto render
```

and we can preview the web version from the console, too:

```{r, eval=FALSE}
quarto preview
```

You can choose whether it previews the website version of our book in the RStudio viewer pane, or an external window (e.g. browser). To do this just click the cog icon:

![](prev.jpg)

### What's going in our codebook?

At the very minimum it is typically recommended that a codebook should probably have the following information, we will go through and make an example with all of these shortly:

+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| Variable name:            | the name of the variable in your script/datafile                                                                                                     |
+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| Variable Label            | a human readable description of the variable                                                                                                         |
+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| Variable definition       | What is the variable? Is it a response to a specific question? Is it an index scoring a number of items (e.g., a mean), if so how was this computed? |
+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| Variable type             | Is this a numerical variable? categorical?                                                                                                           |
+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| Units (if applicable)     | The unit of measurement for the variable                                                                                                             |
+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| Response options          | The range of possible response options for the variable                                                                                              |
|                           |                                                                                                                                                      |
| (if applicable)           |                                                                                                                                                      |
+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| Response coding           | How response options were coded or scored.                                                                                                           |
|                           |                                                                                                                                                      |
| (if applicable)           |                                                                                                                                                      |
+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+
| Missing data/ error codes | Specific responses used to code things such as missing data, errors etc.                                                                             |
|                           |                                                                                                                                                      |
| (if applicable)           |                                                                                                                                                      |
+---------------------------+------------------------------------------------------------------------------------------------------------------------------------------------------+

It is also incredibly valuable to include information about the measures from which your variables are derived. We will do this in our example, too.

### Building our codebook

Lets imagine we are running a study on exercise and mental health and want to create a data dictionary for this. Our hypothetical dataset includes questionnaire questions, indices from these, and objective excersise measures. In the interests of open science we want to make the codebook as comprehensive as possible.

The first thing we want to do is decide how we are going to structure it. For this example we will have an overview page with a minimal codebook, along with more detailed pages for our different measures. We'll create the more detailed version first and condense this into the minimal version at the end.

#### Lets create our first page!

Imagine we want to summarize one of our anxiety measures, say Trait Anxiety. To create a page in our book for this we just need to create a new .qmd file.

![](newfile.jpg)

Lets title it "Trait Anxiety", and save it as "traitanx.qmd" in the directory of our project. You'll end up with a blank document which we will start to populate.

If using a recent version of RStudio you will see that you can edit the documents in both "Visual" and "Source" modes. Both work fine, in source you write in markdown, where as the visual editor lets us do things like insert tables and citations using the GUI instead of writing the code. We'll mainly use the visual editor for simplicity.

Underneath the info codechunk at the top of the page we will add some sections to describe our Trait Anxiety measure. In markdown you specify headers with \# followed by a space then the header, and this is how you do it both in the visual and source editors. So to get the heading "Measure" we would type "\## Measure". \## is a level 2 heading, \### a level three heading and so on.

We will now add headers for the different elements we want to include in our codebook.

Here is what that looks like in the visual editor:

![](tanx_vis.jpg)

and source editor:

![](tanx_source.jpg)

We can now fill in the information
